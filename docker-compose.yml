version: "3.8"

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: speaktome_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: speaktome_db
      MYSQL_USER: speaktome_user
      MYSQL_PASSWORD: speaktome_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - speaktome_network

  # Aplicación Node.js
  app:
    build: .
    container_name: speaktome_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: speaktome_db
      DB_USER: speaktome_user
      DB_PASSWORD: speaktome_password
      JWT_SECRET: your_super_secret_jwt_key_here
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
    depends_on:
      - mysql
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - speaktome_network

  # Nginx (opcional para producción)
  nginx:
    image: nginx:alpine
    container_name: speaktome_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - speaktome_network

volumes:
  mysql_data:

networks:
  speaktome_network:
    driver: bridge
